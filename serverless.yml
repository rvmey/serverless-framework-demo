# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: meetup-demo

custom:
  config: ${file(config/${opt:stage}.yml)}

provider:
  name: aws
  runtime: python3.8
  stage: dev
  region: us-east-1
  accountId: ${self:custom.config.accountId}
  environment:
    STAGE: ${self:provider.stage}
    SLS_SERVICE: ${self:service}
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "states:StartExecution"
      Resource: 
        - "arn:aws:states:${self:provider.region}:${self:provider.accountId}:stateMachine:${self:service}-${self:provider.stage}"

layers:
  pythonpackages:
    path: packages-layer
    name: ${self:service}-pythonpackages-${self:provider.stage}
    compatibleRuntimes:
      - python3.6
      - python3.7
      - python3.8

# you can add packaging information here
package:
  individually: true

functions:
  call_stepfunction:
    name: call_stepfunction_${self:provider.stage}
    handler: lambda_functions/call_stepfunction/handler.handler
    package:
      exclude:
        - ./**
      include:
        - lambda_functions/call_stepfunction/**
    layers:
      - { Ref: PythonpackagesLambdaLayer }
    events:
      - http:
          path: demo
          method: get

  go:
    name: go_${self:provider.stage}
    handler: lambda_functions/go/handler.handler
    package:
      exclude:
        - ./**
      include:
        - lambda_functions/go/**
    layers:
      - { Ref: PythonpackagesLambdaLayer }

stepFunctions:
  stateMachines:
    meetup-demo:
      name: ${self:service}-${self:provider.stage}
      # notifications:
      #   FAILED:
      #     - lambda: arn:aws:lambda:....
      #   TIMED_OUT:
      #     - lambda: arn:aws:lambda:....
      definition:
        ${file(stepfunctions.asl.json)}


# you can add CloudFormation resource templates here
#resources:
#  Resources:
#    NewResource:
#      Type: AWS::S3::Bucket
#      Properties:
#        BucketName: my-new-bucket
#  Outputs:
#     NewOutput:
#       Description: "Description for the output"
#       Value: "Some output value"

plugins:
  - serverless-step-functions